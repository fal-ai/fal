"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
from isolate.connections.grpc.definitions import common_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
from isolate.server.definitions import server_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ApplicationAuthMode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ApplicationAuthModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ApplicationAuthMode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PRIVATE: _ApplicationAuthMode.ValueType  # 0
    PUBLIC: _ApplicationAuthMode.ValueType  # 1
    SHARED: _ApplicationAuthMode.ValueType  # 2

class ApplicationAuthMode(_ApplicationAuthMode, metaclass=_ApplicationAuthModeEnumTypeWrapper): ...

PRIVATE: ApplicationAuthMode.ValueType  # 0
PUBLIC: ApplicationAuthMode.ValueType  # 1
SHARED: ApplicationAuthMode.ValueType  # 2
global___ApplicationAuthMode = ApplicationAuthMode

@typing.final
class HostedMap(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENVIRONMENTS_FIELD_NUMBER: builtins.int
    MACHINE_REQUIREMENTS_FIELD_NUMBER: builtins.int
    FUNCTION_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    @property
    def environments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[server_pb2.EnvironmentDefinition]:
        """Environment definitions."""

    @property
    def machine_requirements(self) -> global___MachineRequirements:
        """Machine requirements"""

    @property
    def function(self) -> common_pb2.SerializedObject:
        """Function to run."""

    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[common_pb2.SerializedObject]:
        """Inputs to the function"""

    def __init__(
        self,
        *,
        environments: collections.abc.Iterable[server_pb2.EnvironmentDefinition] | None = ...,
        machine_requirements: global___MachineRequirements | None = ...,
        function: common_pb2.SerializedObject | None = ...,
        inputs: collections.abc.Iterable[common_pb2.SerializedObject] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_machine_requirements", b"_machine_requirements", "function", b"function", "machine_requirements", b"machine_requirements"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_machine_requirements", b"_machine_requirements", "environments", b"environments", "function", b"function", "inputs", b"inputs", "machine_requirements", b"machine_requirements"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_machine_requirements", b"_machine_requirements"]) -> typing.Literal["machine_requirements"] | None: ...

global___HostedMap = HostedMap

@typing.final
class HostedRun(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENVIRONMENTS_FIELD_NUMBER: builtins.int
    MACHINE_REQUIREMENTS_FIELD_NUMBER: builtins.int
    FUNCTION_FIELD_NUMBER: builtins.int
    SETUP_FUNC_FIELD_NUMBER: builtins.int
    @property
    def environments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[server_pb2.EnvironmentDefinition]:
        """Environment definitions."""

    @property
    def machine_requirements(self) -> global___MachineRequirements:
        """Machine requirements"""

    @property
    def function(self) -> common_pb2.SerializedObject:
        """Function to run."""

    @property
    def setup_func(self) -> common_pb2.SerializedObject:
        """Optional setup function to pass as the first argument to the function."""

    def __init__(
        self,
        *,
        environments: collections.abc.Iterable[server_pb2.EnvironmentDefinition] | None = ...,
        machine_requirements: global___MachineRequirements | None = ...,
        function: common_pb2.SerializedObject | None = ...,
        setup_func: common_pb2.SerializedObject | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_machine_requirements", b"_machine_requirements", "_setup_func", b"_setup_func", "function", b"function", "machine_requirements", b"machine_requirements", "setup_func", b"setup_func"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_machine_requirements", b"_machine_requirements", "_setup_func", b"_setup_func", "environments", b"environments", "function", b"function", "machine_requirements", b"machine_requirements", "setup_func", b"setup_func"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_machine_requirements", b"_machine_requirements"]) -> typing.Literal["machine_requirements"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_setup_func", b"_setup_func"]) -> typing.Literal["setup_func"] | None: ...

global___HostedRun = HostedRun

@typing.final
class CreateUserKeyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Scope:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ScopeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[CreateUserKeyRequest._Scope.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ADMIN: CreateUserKeyRequest._Scope.ValueType  # 0
        API: CreateUserKeyRequest._Scope.ValueType  # 1

    class Scope(_Scope, metaclass=_ScopeEnumTypeWrapper): ...
    ADMIN: CreateUserKeyRequest.Scope.ValueType  # 0
    API: CreateUserKeyRequest.Scope.ValueType  # 1

    SCOPE_FIELD_NUMBER: builtins.int
    ALIAS_FIELD_NUMBER: builtins.int
    scope: global___CreateUserKeyRequest.Scope.ValueType
    """privilege scope of the key"""
    alias: builtins.str
    """optional alias of the key"""
    def __init__(
        self,
        *,
        scope: global___CreateUserKeyRequest.Scope.ValueType = ...,
        alias: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_alias", b"_alias", "alias", b"alias"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_alias", b"_alias", "alias", b"alias", "scope", b"scope"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_alias", b"_alias"]) -> typing.Literal["alias"] | None: ...

global___CreateUserKeyRequest = CreateUserKeyRequest

@typing.final
class CreateUserKeyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_SECRET_FIELD_NUMBER: builtins.int
    KEY_ID_FIELD_NUMBER: builtins.int
    key_secret: builtins.str
    key_id: builtins.str
    def __init__(
        self,
        *,
        key_secret: builtins.str = ...,
        key_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["key_id", b"key_id", "key_secret", b"key_secret"]) -> None: ...

global___CreateUserKeyResponse = CreateUserKeyResponse

@typing.final
class ListUserKeysRequest(google.protobuf.message.Message):
    """Empty. For future use."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListUserKeysRequest = ListUserKeysRequest

@typing.final
class ListUserKeysResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_KEYS_FIELD_NUMBER: builtins.int
    @property
    def user_keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UserKeyInfo]: ...
    def __init__(
        self,
        *,
        user_keys: collections.abc.Iterable[global___UserKeyInfo] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["user_keys", b"user_keys"]) -> None: ...

global___ListUserKeysResponse = ListUserKeysResponse

@typing.final
class RevokeUserKeyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_ID_FIELD_NUMBER: builtins.int
    key_id: builtins.str
    def __init__(
        self,
        *,
        key_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["key_id", b"key_id"]) -> None: ...

global___RevokeUserKeyRequest = RevokeUserKeyRequest

@typing.final
class RevokeUserKeyResponse(google.protobuf.message.Message):
    """Empty. For future use."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RevokeUserKeyResponse = RevokeUserKeyResponse

@typing.final
class UserKeyInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_ID_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    ALIAS_FIELD_NUMBER: builtins.int
    key_id: builtins.str
    scope: global___CreateUserKeyRequest.Scope.ValueType
    alias: builtins.str
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        key_id: builtins.str = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        scope: global___CreateUserKeyRequest.Scope.ValueType = ...,
        alias: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_at", b"created_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["alias", b"alias", "created_at", b"created_at", "key_id", b"key_id", "scope", b"scope"]) -> None: ...

global___UserKeyInfo = UserKeyInfo

@typing.final
class HostedRunResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RUN_ID_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    LOGS_FIELD_NUMBER: builtins.int
    RETURN_VALUE_FIELD_NUMBER: builtins.int
    run_id: builtins.str
    """Unique run id / token."""
    @property
    def status(self) -> global___HostedRunStatus:
        """Optionally the status of the current run (in terms of
        fal cloud).
        """

    @property
    def logs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[common_pb2.Log]:
        """The most recent logs from the run."""

    @property
    def return_value(self) -> common_pb2.SerializedObject:
        """The result of the run, if it is complete (indicated by
        status.is_complete).
        """

    def __init__(
        self,
        *,
        run_id: builtins.str = ...,
        status: global___HostedRunStatus | None = ...,
        logs: collections.abc.Iterable[common_pb2.Log] | None = ...,
        return_value: common_pb2.SerializedObject | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_return_value", b"_return_value", "_status", b"_status", "return_value", b"return_value", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_return_value", b"_return_value", "_status", b"_status", "logs", b"logs", "return_value", b"return_value", "run_id", b"run_id", "status", b"status"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_return_value", b"_return_value"]) -> typing.Literal["return_value"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_status", b"_status"]) -> typing.Literal["status"] | None: ...

global___HostedRunResult = HostedRunResult

@typing.final
class HostedRunStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _State:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[HostedRunStatus._State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        IN_PROGRESS: HostedRunStatus._State.ValueType  # 0
        """The run is in progress."""
        SUCCESS: HostedRunStatus._State.ValueType  # 1
        """The run has completed successfully."""
        INTERNAL_FAILURE: HostedRunStatus._State.ValueType  # 2
        """The run has failed because of isolate.
        TODO: probably QUEUED, etc.
        """

    class State(_State, metaclass=_StateEnumTypeWrapper): ...
    IN_PROGRESS: HostedRunStatus.State.ValueType  # 0
    """The run is in progress."""
    SUCCESS: HostedRunStatus.State.ValueType  # 1
    """The run has completed successfully."""
    INTERNAL_FAILURE: HostedRunStatus.State.ValueType  # 2
    """The run has failed because of isolate.
    TODO: probably QUEUED, etc.
    """

    STATE_FIELD_NUMBER: builtins.int
    state: global___HostedRunStatus.State.ValueType
    """The state of the run."""
    def __init__(
        self,
        *,
        state: global___HostedRunStatus.State.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["state", b"state"]) -> None: ...

global___HostedRunStatus = HostedRunStatus

@typing.final
class MachineRequirements(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MACHINE_TYPE_FIELD_NUMBER: builtins.int
    KEEP_ALIVE_FIELD_NUMBER: builtins.int
    BASE_IMAGE_FIELD_NUMBER: builtins.int
    EXPOSED_PORT_FIELD_NUMBER: builtins.int
    SCHEDULER_FIELD_NUMBER: builtins.int
    SCHEDULER_OPTIONS_FIELD_NUMBER: builtins.int
    MAX_MULTIPLEXING_FIELD_NUMBER: builtins.int
    MAX_CONCURRENCY_FIELD_NUMBER: builtins.int
    MIN_CONCURRENCY_FIELD_NUMBER: builtins.int
    machine_type: builtins.str
    """Machine type. It is not an enum because we want to be able
    to dynamically add new machine types without regenerating
    both the client and the server. Validation is done at the
    server side.
    """
    keep_alive: builtins.int
    base_image: builtins.str
    exposed_port: builtins.int
    scheduler: builtins.str
    max_multiplexing: builtins.int
    max_concurrency: builtins.int
    min_concurrency: builtins.int
    @property
    def scheduler_options(self) -> google.protobuf.struct_pb2.Struct: ...
    def __init__(
        self,
        *,
        machine_type: builtins.str = ...,
        keep_alive: builtins.int | None = ...,
        base_image: builtins.str | None = ...,
        exposed_port: builtins.int | None = ...,
        scheduler: builtins.str | None = ...,
        scheduler_options: google.protobuf.struct_pb2.Struct | None = ...,
        max_multiplexing: builtins.int | None = ...,
        max_concurrency: builtins.int | None = ...,
        min_concurrency: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_base_image", b"_base_image", "_exposed_port", b"_exposed_port", "_keep_alive", b"_keep_alive", "_max_concurrency", b"_max_concurrency", "_max_multiplexing", b"_max_multiplexing", "_min_concurrency", b"_min_concurrency", "_scheduler", b"_scheduler", "_scheduler_options", b"_scheduler_options", "base_image", b"base_image", "exposed_port", b"exposed_port", "keep_alive", b"keep_alive", "max_concurrency", b"max_concurrency", "max_multiplexing", b"max_multiplexing", "min_concurrency", b"min_concurrency", "scheduler", b"scheduler", "scheduler_options", b"scheduler_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_base_image", b"_base_image", "_exposed_port", b"_exposed_port", "_keep_alive", b"_keep_alive", "_max_concurrency", b"_max_concurrency", "_max_multiplexing", b"_max_multiplexing", "_min_concurrency", b"_min_concurrency", "_scheduler", b"_scheduler", "_scheduler_options", b"_scheduler_options", "base_image", b"base_image", "exposed_port", b"exposed_port", "keep_alive", b"keep_alive", "machine_type", b"machine_type", "max_concurrency", b"max_concurrency", "max_multiplexing", b"max_multiplexing", "min_concurrency", b"min_concurrency", "scheduler", b"scheduler", "scheduler_options", b"scheduler_options"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_base_image", b"_base_image"]) -> typing.Literal["base_image"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_exposed_port", b"_exposed_port"]) -> typing.Literal["exposed_port"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_keep_alive", b"_keep_alive"]) -> typing.Literal["keep_alive"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_concurrency", b"_max_concurrency"]) -> typing.Literal["max_concurrency"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_multiplexing", b"_max_multiplexing"]) -> typing.Literal["max_multiplexing"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_min_concurrency", b"_min_concurrency"]) -> typing.Literal["min_concurrency"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_scheduler", b"_scheduler"]) -> typing.Literal["scheduler"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_scheduler_options", b"_scheduler_options"]) -> typing.Literal["scheduler_options"] | None: ...

global___MachineRequirements = MachineRequirements

@typing.final
class RegisterApplicationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENVIRONMENTS_FIELD_NUMBER: builtins.int
    MACHINE_REQUIREMENTS_FIELD_NUMBER: builtins.int
    FUNCTION_FIELD_NUMBER: builtins.int
    SETUP_FUNC_FIELD_NUMBER: builtins.int
    APPLICATION_NAME_FIELD_NUMBER: builtins.int
    AUTH_MODE_FIELD_NUMBER: builtins.int
    MAX_CONCURRENCY_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    application_name: builtins.str
    """Name of the application"""
    auth_mode: global___ApplicationAuthMode.ValueType
    """If application has alias: auth mode to use"""
    max_concurrency: builtins.int
    """Max concurrency in gateway"""
    @property
    def environments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[server_pb2.EnvironmentDefinition]:
        """Environment definitions."""

    @property
    def machine_requirements(self) -> global___MachineRequirements:
        """Machine requirements"""

    @property
    def function(self) -> common_pb2.SerializedObject:
        """Function to run."""

    @property
    def setup_func(self) -> common_pb2.SerializedObject:
        """Optional setup function to pass as the first argument to the function."""

    @property
    def metadata(self) -> google.protobuf.struct_pb2.Struct:
        """metadata to store with the application"""

    def __init__(
        self,
        *,
        environments: collections.abc.Iterable[server_pb2.EnvironmentDefinition] | None = ...,
        machine_requirements: global___MachineRequirements | None = ...,
        function: common_pb2.SerializedObject | None = ...,
        setup_func: common_pb2.SerializedObject | None = ...,
        application_name: builtins.str | None = ...,
        auth_mode: global___ApplicationAuthMode.ValueType | None = ...,
        max_concurrency: builtins.int | None = ...,
        metadata: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_application_name", b"_application_name", "_auth_mode", b"_auth_mode", "_machine_requirements", b"_machine_requirements", "_max_concurrency", b"_max_concurrency", "_metadata", b"_metadata", "_setup_func", b"_setup_func", "application_name", b"application_name", "auth_mode", b"auth_mode", "function", b"function", "machine_requirements", b"machine_requirements", "max_concurrency", b"max_concurrency", "metadata", b"metadata", "setup_func", b"setup_func"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_application_name", b"_application_name", "_auth_mode", b"_auth_mode", "_machine_requirements", b"_machine_requirements", "_max_concurrency", b"_max_concurrency", "_metadata", b"_metadata", "_setup_func", b"_setup_func", "application_name", b"application_name", "auth_mode", b"auth_mode", "environments", b"environments", "function", b"function", "machine_requirements", b"machine_requirements", "max_concurrency", b"max_concurrency", "metadata", b"metadata", "setup_func", b"setup_func"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_application_name", b"_application_name"]) -> typing.Literal["application_name"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_auth_mode", b"_auth_mode"]) -> typing.Literal["auth_mode"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_machine_requirements", b"_machine_requirements"]) -> typing.Literal["machine_requirements"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_concurrency", b"_max_concurrency"]) -> typing.Literal["max_concurrency"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_metadata", b"_metadata"]) -> typing.Literal["metadata"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_setup_func", b"_setup_func"]) -> typing.Literal["setup_func"] | None: ...

global___RegisterApplicationRequest = RegisterApplicationRequest

@typing.final
class RegisterApplicationResultType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    APPLICATION_ID_FIELD_NUMBER: builtins.int
    application_id: builtins.str
    def __init__(
        self,
        *,
        application_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["application_id", b"application_id"]) -> None: ...

global___RegisterApplicationResultType = RegisterApplicationResultType

@typing.final
class RegisterApplicationResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOGS_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    @property
    def logs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[common_pb2.Log]: ...
    @property
    def result(self) -> global___RegisterApplicationResultType: ...
    def __init__(
        self,
        *,
        logs: collections.abc.Iterable[common_pb2.Log] | None = ...,
        result: global___RegisterApplicationResultType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_result", b"_result", "result", b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_result", b"_result", "logs", b"logs", "result", b"result"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_result", b"_result"]) -> typing.Literal["result"] | None: ...

global___RegisterApplicationResult = RegisterApplicationResult

@typing.final
class UpdateApplicationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    APPLICATION_NAME_FIELD_NUMBER: builtins.int
    KEEP_ALIVE_FIELD_NUMBER: builtins.int
    MAX_MULTIPLEXING_FIELD_NUMBER: builtins.int
    MAX_CONCURRENCY_FIELD_NUMBER: builtins.int
    MIN_CONCURRENCY_FIELD_NUMBER: builtins.int
    application_name: builtins.str
    keep_alive: builtins.int
    max_multiplexing: builtins.int
    max_concurrency: builtins.int
    min_concurrency: builtins.int
    def __init__(
        self,
        *,
        application_name: builtins.str = ...,
        keep_alive: builtins.int | None = ...,
        max_multiplexing: builtins.int | None = ...,
        max_concurrency: builtins.int | None = ...,
        min_concurrency: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_keep_alive", b"_keep_alive", "_max_concurrency", b"_max_concurrency", "_max_multiplexing", b"_max_multiplexing", "_min_concurrency", b"_min_concurrency", "keep_alive", b"keep_alive", "max_concurrency", b"max_concurrency", "max_multiplexing", b"max_multiplexing", "min_concurrency", b"min_concurrency"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_keep_alive", b"_keep_alive", "_max_concurrency", b"_max_concurrency", "_max_multiplexing", b"_max_multiplexing", "_min_concurrency", b"_min_concurrency", "application_name", b"application_name", "keep_alive", b"keep_alive", "max_concurrency", b"max_concurrency", "max_multiplexing", b"max_multiplexing", "min_concurrency", b"min_concurrency"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_keep_alive", b"_keep_alive"]) -> typing.Literal["keep_alive"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_concurrency", b"_max_concurrency"]) -> typing.Literal["max_concurrency"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_multiplexing", b"_max_multiplexing"]) -> typing.Literal["max_multiplexing"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_min_concurrency", b"_min_concurrency"]) -> typing.Literal["min_concurrency"] | None: ...

global___UpdateApplicationRequest = UpdateApplicationRequest

@typing.final
class UpdateApplicationResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALIAS_INFO_FIELD_NUMBER: builtins.int
    @property
    def alias_info(self) -> global___AliasInfo: ...
    def __init__(
        self,
        *,
        alias_info: global___AliasInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["alias_info", b"alias_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["alias_info", b"alias_info"]) -> None: ...

global___UpdateApplicationResult = UpdateApplicationResult

@typing.final
class ListApplicationsRequest(google.protobuf.message.Message):
    """Empty. For future use."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListApplicationsRequest = ListApplicationsRequest

@typing.final
class ApplicationInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    APPLICATION_ID_FIELD_NUMBER: builtins.int
    MAX_CONCURRENCY_FIELD_NUMBER: builtins.int
    MAX_MULTIPLEXING_FIELD_NUMBER: builtins.int
    KEEP_ALIVE_FIELD_NUMBER: builtins.int
    ACTIVE_RUNNERS_FIELD_NUMBER: builtins.int
    MIN_CONCURRENCY_FIELD_NUMBER: builtins.int
    application_id: builtins.str
    max_concurrency: builtins.int
    max_multiplexing: builtins.int
    keep_alive: builtins.int
    active_runners: builtins.int
    min_concurrency: builtins.int
    def __init__(
        self,
        *,
        application_id: builtins.str = ...,
        max_concurrency: builtins.int = ...,
        max_multiplexing: builtins.int = ...,
        keep_alive: builtins.int = ...,
        active_runners: builtins.int = ...,
        min_concurrency: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["active_runners", b"active_runners", "application_id", b"application_id", "keep_alive", b"keep_alive", "max_concurrency", b"max_concurrency", "max_multiplexing", b"max_multiplexing", "min_concurrency", b"min_concurrency"]) -> None: ...

global___ApplicationInfo = ApplicationInfo

@typing.final
class ListApplicationsResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    APPLICATIONS_FIELD_NUMBER: builtins.int
    @property
    def applications(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ApplicationInfo]: ...
    def __init__(
        self,
        *,
        applications: collections.abc.Iterable[global___ApplicationInfo] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["applications", b"applications"]) -> None: ...

global___ListApplicationsResult = ListApplicationsResult

@typing.final
class DeleteApplicationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    APPLICATION_ID_FIELD_NUMBER: builtins.int
    application_id: builtins.str
    def __init__(
        self,
        *,
        application_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["application_id", b"application_id"]) -> None: ...

global___DeleteApplicationRequest = DeleteApplicationRequest

@typing.final
class DeleteApplicationResult(google.protobuf.message.Message):
    """Empty. For future use."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeleteApplicationResult = DeleteApplicationResult

@typing.final
class SetAliasRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALIAS_FIELD_NUMBER: builtins.int
    REVISION_FIELD_NUMBER: builtins.int
    AUTH_MODE_FIELD_NUMBER: builtins.int
    alias: builtins.str
    revision: builtins.str
    auth_mode: global___ApplicationAuthMode.ValueType
    def __init__(
        self,
        *,
        alias: builtins.str = ...,
        revision: builtins.str = ...,
        auth_mode: global___ApplicationAuthMode.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["alias", b"alias", "auth_mode", b"auth_mode", "revision", b"revision"]) -> None: ...

global___SetAliasRequest = SetAliasRequest

@typing.final
class SetAliasResult(google.protobuf.message.Message):
    """Empty. For future use."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___SetAliasResult = SetAliasResult

@typing.final
class DeleteAliasRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALIAS_FIELD_NUMBER: builtins.int
    alias: builtins.str
    def __init__(
        self,
        *,
        alias: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["alias", b"alias"]) -> None: ...

global___DeleteAliasRequest = DeleteAliasRequest

@typing.final
class DeleteAliasResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REVISION_FIELD_NUMBER: builtins.int
    revision: builtins.str
    def __init__(
        self,
        *,
        revision: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["revision", b"revision"]) -> None: ...

global___DeleteAliasResult = DeleteAliasResult

@typing.final
class ListAliasesRequest(google.protobuf.message.Message):
    """Empty. For future use."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListAliasesRequest = ListAliasesRequest

@typing.final
class ListAliasesResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALIASES_FIELD_NUMBER: builtins.int
    @property
    def aliases(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AliasInfo]: ...
    def __init__(
        self,
        *,
        aliases: collections.abc.Iterable[global___AliasInfo] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["aliases", b"aliases"]) -> None: ...

global___ListAliasesResult = ListAliasesResult

@typing.final
class AliasInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALIAS_FIELD_NUMBER: builtins.int
    REVISION_FIELD_NUMBER: builtins.int
    AUTH_MODE_FIELD_NUMBER: builtins.int
    MAX_CONCURRENCY_FIELD_NUMBER: builtins.int
    MAX_MULTIPLEXING_FIELD_NUMBER: builtins.int
    KEEP_ALIVE_FIELD_NUMBER: builtins.int
    ACTIVE_RUNNERS_FIELD_NUMBER: builtins.int
    MIN_CONCURRENCY_FIELD_NUMBER: builtins.int
    alias: builtins.str
    revision: builtins.str
    auth_mode: global___ApplicationAuthMode.ValueType
    max_concurrency: builtins.int
    max_multiplexing: builtins.int
    keep_alive: builtins.int
    active_runners: builtins.int
    min_concurrency: builtins.int
    def __init__(
        self,
        *,
        alias: builtins.str = ...,
        revision: builtins.str = ...,
        auth_mode: global___ApplicationAuthMode.ValueType = ...,
        max_concurrency: builtins.int = ...,
        max_multiplexing: builtins.int = ...,
        keep_alive: builtins.int = ...,
        active_runners: builtins.int = ...,
        min_concurrency: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["active_runners", b"active_runners", "alias", b"alias", "auth_mode", b"auth_mode", "keep_alive", b"keep_alive", "max_concurrency", b"max_concurrency", "max_multiplexing", b"max_multiplexing", "min_concurrency", b"min_concurrency", "revision", b"revision"]) -> None: ...

global___AliasInfo = AliasInfo

@typing.final
class SetSecretRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str
    value: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        value: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_value", b"_value", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_value", b"_value", "name", b"name", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_value", b"_value"]) -> typing.Literal["value"] | None: ...

global___SetSecretRequest = SetSecretRequest

@typing.final
class SetSecretResponse(google.protobuf.message.Message):
    """Empty. For future use."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___SetSecretResponse = SetSecretResponse

@typing.final
class ListSecretsRequest(google.protobuf.message.Message):
    """Empty. For future use."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListSecretsRequest = ListSecretsRequest

@typing.final
class Secret(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    CREATED_TIME_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def created_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Could also include the value/scope of the secret in the future."""

    def __init__(
        self,
        *,
        name: builtins.str = ...,
        created_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_created_time", b"_created_time", "created_time", b"created_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_created_time", b"_created_time", "created_time", b"created_time", "name", b"name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_created_time", b"_created_time"]) -> typing.Literal["created_time"] | None: ...

global___Secret = Secret

@typing.final
class ListSecretsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SECRETS_FIELD_NUMBER: builtins.int
    @property
    def secrets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Secret]: ...
    def __init__(
        self,
        *,
        secrets: collections.abc.Iterable[global___Secret] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["secrets", b"secrets"]) -> None: ...

global___ListSecretsResponse = ListSecretsResponse

@typing.final
class ListAliasRunnersRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALIAS_FIELD_NUMBER: builtins.int
    alias: builtins.str
    def __init__(
        self,
        *,
        alias: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["alias", b"alias"]) -> None: ...

global___ListAliasRunnersRequest = ListAliasRunnersRequest

@typing.final
class ListAliasRunnersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RUNNERS_FIELD_NUMBER: builtins.int
    @property
    def runners(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RunnerInfo]: ...
    def __init__(
        self,
        *,
        runners: collections.abc.Iterable[global___RunnerInfo] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["runners", b"runners"]) -> None: ...

global___ListAliasRunnersResponse = ListAliasRunnersResponse

@typing.final
class RunnerInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RUNNER_ID_FIELD_NUMBER: builtins.int
    IN_FLIGHT_REQUESTS_FIELD_NUMBER: builtins.int
    EXPIRATION_COUNTDOWN_FIELD_NUMBER: builtins.int
    UPTIME_FIELD_NUMBER: builtins.int
    runner_id: builtins.str
    in_flight_requests: builtins.int
    expiration_countdown: builtins.int
    uptime: builtins.float
    def __init__(
        self,
        *,
        runner_id: builtins.str = ...,
        in_flight_requests: builtins.int = ...,
        expiration_countdown: builtins.int = ...,
        uptime: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["expiration_countdown", b"expiration_countdown", "in_flight_requests", b"in_flight_requests", "runner_id", b"runner_id", "uptime", b"uptime"]) -> None: ...

global___RunnerInfo = RunnerInfo
