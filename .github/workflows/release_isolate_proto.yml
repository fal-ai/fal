name: PyPI release isolate-proto

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version
        required: false
        default: patch
        type: choice
        options:
          - patch
          - minor

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          # To make actions trigger new workflow runs
          token: ${{ secrets.RELEASER_GITHUB_PAT }}
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install poetry
        shell: bash
        run: pip install poetry-core=="1.4.*" poetry=="1.3.1"

      - name: Bump publishing version and build
        working-directory: projects/isolate_proto
        env:
          VERSION_TYPE: ${{ github.event.inputs.version }}
        run: |
          if [ -z "$VERSION_TYPE" ]; then
            echo "Version is not set"
            exit 1
          fi

          poetry version $VERSION_TYPE
          poetry build

          # set in GITHUB_ENV
          BUILT_VERSION=$(poetry version -s)
          echo "BUILT_VERSION=$BUILT_VERSION"
          echo "BUILT_VERSION=$BUILT_VERSION" >> $GITHUB_ENV

      - name: Publish PyPI
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USER }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        working-directory: projects/isolate_proto
        run: poetry publish -u $PYPI_USERNAME -p $PYPI_PASSWORD -v -n

      - name: Clean git changes
        working-directory: projects/isolate_proto
        run: |
          git add poetry.lock
          git checkout -- .
          git reset

      - name: Bump repo version
        working-directory: projects/isolate_proto
        run: |
          # Set the version in the pyproject.toml
          poetry version ${{ env.BUILT_VERSION }}
          # And bump it for development
          poetry version prerelease

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          branch: bump-proto-version-${{ env.BUILT_VERSION }}
          delete-branch: true
          title: Bump the pyproject.toml version for isolate-proto
          base: main
          token: ${{ secrets.RELEASER_GITHUB_PAT }}
